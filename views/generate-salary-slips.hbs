<style>
   .progress-bar {
  width: 100%;
  height: 20px;
  background-color: #28a745;
  border-radius: 10px;
  overflow: hidden;
}

.progress-bar.completed {
  background-color: #28a745;
}

.processing {
  color: #28a745;
}

.progress-bar::before {
  content: '';
  display: block;
  width: 0;
  height: 100%;
  background-color: #007bff;
  transition: width 0.3s ease-in-out;
}

#drop-area {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
        cursor: pointer;
    }

    #drop-area.valid {
        border-color: #4CAF50;
    }

    #drop-area.invalid {
        border-color: red;
    }

    #status {
        margin-top: 20px;
    }

    .bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
    }
  </style>  

<main>
    <h2>Generate Salary Slips</h2>
  <p>Generate salary slips for employees here.</p>
    <section id="biometric-calculations">
      <div class="container">
        <div style="background-color: #e9ecef;">
          <div class="row">
            <div class="col-sm-12 col-md-12">
                <div class="main-container2">
                   <form method="post" action="/generate-salary-slips" enctype="multipart/form-data" id="form">
                        <div
                        class="max-w-xl m-auto h-screen flex flex-col align-center justify-center"
                        >
                        <div class="flex flex-col w-full items-center justify-center bg-grey-lighter">
                            <div id="drop-area">

                            <label
                                class="w-64 flex flex-col items-center px-4 py-7 bg-white text-gray-500 rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:text-teal-800"
                            >
                                <img src="assets/csv-file-icon.svg" width="32" />
                                <span class="mt-2 leading-normal">Select an csv</span> 
                                <input type="file" id="csv" name="csv" accept=".csv" class="hidden">

                            </label>
                                <div id="status" /></div>
                            </div>
                            <input type="hidden" id="results-data" value="{{results}}">
                            <div id="loading" style="display:none;">
                                <div class="scene">
                                <div class="shadow"></div>
                                <div class="jumper">
                                    <div class="spinner">
                                    <div class="scaler">
                                        <div class="loader">
                                        <div class="cuboid">
                                            <div class="cuboid__side"></div>
                                            <div class="cuboid__side"></div>
                                            <div class="cuboid__side"></div>
                                            <div class="cuboid__side"></div>
                                            <div class="cuboid__side"></div>
                                            <div class="cuboid__side"></div>
                                        </div>
                                        </div>
                                    </div>
                                    </div>
                                </div>
                                
                                </div>
                            </div>


                            {{error}}
                        </div>

                        
                        <!-- Button -->
                            <div class="mt-6">
                            <button
                                id="gen_btn"
                                type="submit"
                                class="w-10 m-auto flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-teal-500 hover:bg-teal-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                            >
                                Generate
                            </button>

                            <Button 
                            href="/home"
                            style="display:none;"
                            id="refresh"
                            class="w-10 m-auto flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-teal-500 hover:bg-teal-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                            >Refresh</Button>

                            </div>

                        <p id="fileOutput" class=" text-lg text-center font-mono mt-6 hidden"><strong>Output: </strong><span id="filename"></span></p>
                        <p class="text-white text-lg text-center font-mono mt-2 process_bar" style="display:none;" >
                            <strong> <span class="processing"> Processing... </span></strong><span id="output-path">
                            <div class="progress-bar process_bar" style="display:none;"></div>
                        </span></p>

                        </div>

                    </form>
                </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>

$(document).ready(function () {
        var dropArea = $('#drop-area');
        var fileInput = $('#csv');
        var status = $('#status');


        const genrateBTN = $('#gen_btn');


        dropArea.on('dragover', function (e) {
            e.preventDefault();
            dropArea.addClass('valid');
        });

        dropArea.on('dragleave', function () {
            dropArea.removeClass('valid');
        });

        dropArea.on('drop', function (e) {
            e.preventDefault();
            fileInput.trigger('change');
            console.log('drop', e.originalEvent.dataTransfer.files);
            handleFiles(e.originalEvent.dataTransfer.files);
        });

        fileInput.on('change', function () {
          console.log('change', fileInput[0].files);
            handleFiles(fileInput[0].files);
        });

        function handleFiles(files) {
    dropArea.removeClass('valid invalid');

    if (files.length > 0) {
                var file = files[0];
                var fileType = file.type;
                var validTypes = ['text/csv', 'application/vnd.ms-excel'];

                if (validTypes.includes(fileType)) {
                    dropArea.addClass('valid');
                    status.html('<span style="color: green;">File is valid. ✔️</span>');

                    // Append the files to the file input element
                    const fileInput = $('#csv');
                    fileInput[0].files = files;

                    console.log(fileInput[0].files);
                } else {
                    dropArea.addClass('invalid');
                    status.html('<span style="color: red;">Invalid file ❌ Please select a CSV file</span>');
                }
            } else {
                status.html('');
            }
        }

    });


    $(document).ready(function() {

    const namelist = [];
    const data = JSON.parse($('#results-data').val());

    console.log('data');


    const progressBar = $('.progress-bar');
    const gen_btn = $('#gen_btn');
    const refresh = $('#refresh');
    const process_bar_html = $('.process_bar');
    const loading = $('#loading');
    var dropArea = $('#drop-area');
    $.each(data, function(index, value){
      if(index > 0){

        gen_btn.html('<i class="fa fa-spinner fa-spin"></i>');

        
      
        dropArea.hide();
        loading.show();

      namelist.push(value._0)
      console.log(index, value._0);

      var h6 = $(`<h6 id="${index}" >${value._0}</h6>`)
      $('.show').append(h6);
      }
      
    });

   console.log('namelist =', namelist)

    const linksdata = [];  
    var links = $('.data');
    var arrayCount = namelist.length;

            var counter = 1;
            var progresscounter = 0;
            let progress = 0;
            console.log(arrayCount)


          var intervalId = setInterval(function() {

            if (counter > arrayCount) {
             

              
              clearInterval(intervalId);
              console.log('counter = ' , counter)
              return;
            }

          var postData = {
            data: data[counter],
            headers: data[0],
            id: counter,
          }

          console.log(counter)

           $.ajax({
            url: '/create-html',
            type: 'POST',
            data: postData,
            success: function(data) {
            // Append the name value pairs to the data div

            gen_btn.css({'display': 'none'});
            process_bar_html.show();
            
             progress = Math.ceil((progresscounter / arrayCount) * 100);
             progressBar.css('width', progress + '%').text(progress + '%');
             console.log('progress', counter/arrayCount, 'counter', counter, 'arrayCount', arrayCount)

              if (progress === 100) {
                progressBar.addClass('completed');
                refresh.show();
                $('.processing').html(' Completed ✔️');
                $('#fileOutput').show();
                $('#filename').html(data.output);
                dropArea.show();
                loading.hide();
                $('head style#basic').remove();
              }
            
            console.log('data', data.id, data.pdfFileName, data)
            //  $('#'+data.id).html(data.title+ ' (Done)' ).css({'color':'blue', 'font-size' : '20px'} );
              $('#'+data.id).html( data.pdfFileName +' (created)' ).css({'color':'green'} );

            }
            });


          counter++;
          progresscounter++;
          }, 3000);




          // for css

          // Check if #loading is visible
          if ($('#loading').is(':visible')) {
            // Add the styles to the head of the document
            $('head').append(`
              <style id="basic">
                *,
            *:after,
            *:before {
              box-sizing: border-box;
              transform-style: preserve-3d;
            }

            body {
              display: grid;
              place-items: center;
              min-height: 100vh;
              font-family:  'Google Sans', sans-serif, system-ui;
            }

            :root {
              --size: 120;
              --coefficient: 1px;
              --timeline: 2.6s;
              --delay: 0.65s;
              --rotation-y: -24;
              --rotation-x: 28;
              --color-one: #3a0ca3;
              --color-two: #4361ee;
              --color-three: #4cc9f0;
            }

            .scene {
              position: relative;
              transform: translate3d(0, 0, 100vmin) rotateX(calc(var(--rotation-y, 0) * 1deg)) rotateY(calc(var(--rotation-x, 0) * 1deg)) rotateX(0deg);
            }

            body {
              transform-origin: 50% 50%;
              animation: scale var(--timeline) var(--delay) infinite linear;
            }

            @keyframes scale {
              0%, 10% {
                transform: scaleX(1) scaleY(1);
              }
              35%, 100% {
                transform: scaleX(0.5) scaleY(0.5);
              }
            }

            .shadow {
              width: calc(var(--size) * var(--coefficient));
              position: absolute;
              bottom: 0;
              aspect-ratio: 1;
              transform-origin: 50% 50%;
              background: hsl(210 80% 50% / 0.2);
              transform: rotateX(90deg) translate3d(0, 0, calc((var(--size) * (var(--coefficient) * -0.5)) - 1px)) scale(0.96);
              animation: squish-squosh var(--timeline) var(--delay) infinite, fade var(--timeline) var(--delay) infinite;
              background: black;
            }

            .loader {
              --depth: var(--size);
              --color: var(--color-one, #8338EC);
              width: calc(var(--depth) * var(--coefficient));
              aspect-ratio: 1;
              transform-origin: 50% 50%;
              animation: squish-squosh var(--timeline) var(--delay) infinite;
            }

            .spinner {
              animation: spin var(--timeline) var(--delay) infinite;
            }

            .jumper {
              animation: jump var(--timeline) var(--delay) infinite;
            }

            @keyframes squish-squosh {
              0%, 50%, 60% {
                scale:  1 1 1;
              }
              10%, 35% {
                scale: 1.2 0.8 1.2;
              }
              25% {
                scale: 0.8 1.2 0.8;
              }
              70% {
                scale: 1 1 2;
              }
              80% {
                scale: 2 1 2;
              }
              90%, 100% {
                scale: 2 2 2;
              }
            }


            @keyframes fade {
              0%, 10%, 40%, 50%, 60%, 100% {
                opacity: 1;
              }
              25% {
                opacity: 0.5;
              }
            }

            @keyframes spin {
              0%, 10% { rotate: 0deg; }
              30%, 100% { rotate: -360deg; }
            }
            @keyframes jump {
              0%, 10%, 35%, 50% {
                translate: 0 0;
              }
              25% {
                translate: 0 -150%;
              }
            }

            /* Cuboid boilerplate code */
            .cuboid {
              width: 100%;
              height: 100%;
              position: relative;
            }
            .cuboid__side {
              background: var(--color);
              position: absolute;
            }
            .cuboid__side:nth-of-type(1) {
              --b: 1.1;
              height: calc(var(--depth, 20) * var(--coefficient));
              width: 100%;
              top: 0;
              transform: translate(0, -50%) rotateX(90deg);
            }
            .cuboid__side:nth-of-type(2) {
              --b: 0.9;
              --color: var(--color-three, #FF006E);
              height: 100%;
              width: calc(var(--depth, 20) * var(--coefficient));
              top: 50%;
              right: 0;
              transform: translate(50%, -50%) rotateY(90deg);
            }
            .cuboid__side:nth-of-type(3) {
              --b: 1;
              width: 100%;
              height: calc(var(--depth, 20) * var(--coefficient));
              bottom: 0;
              transform: translate(0%, 50%) rotateX(90deg);
            }
            .cuboid__side:nth-of-type(4) {
              --b: 1;
              --color: var(--color-three, #FF006E);
              height: 100%;
              width: calc(var(--depth, 20) * var(--coefficient));
              left: 0;
              top: 50%;
              transform: translate(-50%, -50%) rotateY(90deg);
            }
            .cuboid__side:nth-of-type(5) {
              --b: 1;
              --color: var(--color-two, #3A86EF);
              height: 100%;
              width: 100%;
              transform: translate3d(0, 0, calc(var(--depth, 20) * (var(--coefficient) * 0.5)));
              top: 0;
              left: 0;
            }
            .cuboid__side:nth-of-type(6) {
              --b: 1.2;
              height: 100%;
              width: 100%;
              transform: translate3d(0, 0, calc(var(--depth, 20) * (var(--coefficient) * -0.5))) rotateY(180deg);
              top: 0;
              left: 0;
            }
              </style>
            `);
          } else {
            // Remove the added styles from the head
            $('head style#basic').remove();
          }


    });

 
  </script>